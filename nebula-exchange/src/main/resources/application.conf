{
  # Spark relation config
  spark: {
    app: {
      name: Nebula Exchange 2.0
    }

    driver: {
      cores: 1
      maxResultSize: 1G
    }

    executor: {
      memory: 1G
    }

    cores: {
      max: 16
    }
  }

  # Nebula Graph relation config
  nebula: {
    address: {
      graph: ["127.0.0.1:3699"]
      meta: ["127.0.0.1:45500"]
    }
    user: user
    pswd: password
    space: test

    connection {
      timeout: 3000
      retry: 3
    }

    execution {
      retry: 3
    }

    error: {
      max: 32
      # failed import job will be recorded in output path
      output: /tmp/errors
    }

    rate: {
      limit: 1024
      timeout: 1000
    }
  }

  # Processing tags
  tags: [

    # Loading tag from HDFS and data type is parquet
    {
      name: tag-name-0
      type: {
        source: parquet
        sink: client
      }
      path: hdfs tag path 0
      fields: [parquet-field-0, parquet-field-1, parquet-field-2]
      nebula.fields: [nebula-field-0 nebula-field-1 nebula-field-2]
      vertex: hive-field-0
      batch: 256
      partition: 32
    }

    # Loading tag from HDFS and data type is csv
    {
      name: tag-name-2
      type: {
        source: csv
        sink: client
      }
      path: hdfs tag path 2
      fields: [csv-field-0, csv-field-1, csv-field-2]
      nebula.fields: [nebula-field-0, nebula-field-1, nebula-field-2]
      vertex: hive-field-0
      separator: ","
      header: false
      csv.fields: [field-0, field-1, field-2]
      batch: 256
      partition: 32
    }

    # Loading tag from HDFS and data type is csv
    {
      name: tag-name-2
      type: {
        source: csv
        sink: client
      }
      path: hdfs tag path 2
      fields: [csv-field-0, csv-field-1, csv-field-2]
      nebula.fields: [nebula-field-0, nebula-field-1, nebula-field-2]
      vertex: hive-field-0
      separator: ","
      header: true
      batch: 256
      partition: 32
    }
  ]

  # Processing edges
  edges: [
    # Loading tag from HDFS and data type is json
    {
      name: edge-name-0
      type: {
        source: json
        sink: client
      }
      path: hdfs edge path 0
      fields: [json-field-0, json-field-1, json-field-2]
      nebula.fields: [nebula-field-0, nebula-field-1, nebula-field-2]
      source: {
        field: hive-field-0
      }
      target: {
        field: hive-field-1
      }
      ranking: hive-field-2
      batch: 256
      partition: 32
    }
  ]
}
